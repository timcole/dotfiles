#!/bin/sh
CONTEXT="socialblade"
NAMESPACE="default"
SOCIALBLADE_EPOCH="1202446179000"

sb_help(){
  echo "Usage: sb <command> [options]\n"
  echo "Commands:"
  echo "  snow  Convert snowflake to timestamp"
  echo "  sh    Exec /bin/sh on a deployment"
  echo "  log   Stream logs from deployment"
  echo "  pull  Pull on web/api/realtime gcp"
}

sb_snow() {
  if [[ $# -eq 0 ]] ; then
    echo 'missing snowflake'
    exit 1
  fi

  epoch=$((($1 >> 23) + $SOCIALBLADE_EPOCH))
  date -r $(($epoch/1000))
}

sb_sh() {
  if [[ $# -eq 0 ]] ; then
    echo 'missing selector (try: deployments/web)'
    exit 1
  fi

  if [[ $# -eq 1 ]] ; then
    kubectl exec --context $CONTEXT -n $NAMESPACE --stdin --tty $1 -- /bin/sh
  else
    kubectl exec --context $CONTEXT -n $NAMESPACE --container $2 --stdin --tty $1 -- /bin/sh
  fi
}

sb_log() {
  if [[ $# -eq 0 ]] ; then
    echo 'missing selector (try: deployments/web)'
    exit 1
  fi

  if [[ $# -eq 1 ]] ; then
    kubectl logs --context $CONTEXT -n $NAMESPACE -f $1 --all-containers --prefix --timestamps
  else
    kubectl logs --context $CONTEXT -n $NAMESPACE -f $1 --container $2 --timestamps
  fi
}

sb_pull() {
  if [[ $# -eq 0 ]] ; then
    echo 'missing type web, api, realtime'
    exit 1
  fi

  case $1 in
    web)
      gcloud compute instances list --format="value(NAME)" --filter="name:(sb-website-*)" | xargs -P 0 -I{} gcloud compute ssh t@{} --zone us-east1-d --command "sudo -u www-data git -C /var/www/html/socialblade.com pull"
      ;;
    api)
      gcloud compute instances list --format="value(NAME)" --filter="name:(sb-api-*)" | xargs -P 0 -I{} gcloud compute ssh t@{} --zone us-east1-d --command "sudo -u www-data git -C /var/www/html/api pull"
      ;;
    realtime)
      gcloud compute instances list --format="value(NAME)" --filter="name:(sb-realtime-*)" | xargs -P 0 -I{} gcloud compute ssh t@{} --zone us-east1-d --command "sudo -u www-data git -C /var/www/html/realtime pull"
      ;;
    *)
      echo -n "Invalid Option: web, api, realtime"
      ;;
  esac
}

sub=$1
case $sub in
  "" | "-h" | "--help")
    sb_help
    ;;
  *)
    shift
    sb_${sub} $@
    if [ $? = 127 ]; then
      echo "Error: '$sub' is not a known command.\n" >&2
      sb_help
      exit 1
    fi
    ;;
esac
